{"version":3,"file":"heyColor.js","sources":["../src/heyColor.js"],"sourcesContent":["class HeyColor {\n  constructor(image, config = {}) {\n    this.image = image;\n    this.definition = config.definition || 40;\n    this.colorLength = 10;\n    this.getImageData();\n  }\n\n  // crate canvas and get image data from canvas\n  getImageData() {\n    console.time(1)\n    const imgW = this.image.width;\n    const imgH = this.image.height;\n    let cavsW = imgW;\n    let cavsH = imgH;\n    if (imgW > imgH) {\n      cavsW = Math.min(500, imgW);\n      cavsH = Math.min(500 * imgH / imgW, imgH);\n    } else {\n      cavsW = Math.min(500 * imgW / imgH, imgW);\n      cavsH = Math.min(500, imgH);\n    }\n\n    const canvas = document.createElement('canvas');\n    canvas.width = cavsW;\n    canvas.height = cavsH;\n    const ctx = canvas.getContext('2d');\n    console.timeEnd(1)\n    console.time(2)\n    ctx.drawImage(this.image, 0, 0, imgW, imgH, 0, 0, cavsW, cavsH);\n    console.timeEnd(2)\n    console.time(3)\n    this.imageDate = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n    console.timeEnd(3)\n    console.time(4)\n    this.analysisColor();\n    console.timeEnd(4)\n\n  }\n\n  analysisColor() {\n    const imageDate = this.imageDate;\n    const data = imageDate.data;\n    const colorAnalys = [];\n    // \n    console.time(1.1)\n    const GDefinition = this.definition * 1.5;\n    const BDefinition = this.definition * 2;\n    const filterRVale = 40 / this.definition;\n    const filterGVale = 40 / GDefinition;\n    const filterBVale = 40 / BDefinition;\n    for (let i = 0; i < data.length; i += 4) {\n      const R = data[i];\n      const G = data[i + 1];\n      const B = data[i + 2];\n      const _R = parseInt(data[i] / this.definition);\n      const _G = parseInt(data[i + 1] / GDefinition);\n      const _B = parseInt(data[i + 2] / BDefinition);\n      if (\n        _R < filterRVale && _G < filterGVale ||\n        _G < filterGVale && _B < filterBVale ||\n        _R < filterRVale && _B < filterBVale\n      ) {\n        continue;\n      }\n      const ColorID = `${_R}_${_G}_${_B}`;\n      // for human eye\n      colorAnalys[ColorID] = colorAnalys[ColorID] || {\n        colorRGB: [R, G, B],\n        colors: [],\n        count: 0\n      };\n      colorAnalys[ColorID].count += 1;\n    }\n    console.timeEnd(1.1)\n\n\n    console.time(1.2)\n    const colorAnalysArr = [];\n    Object.keys(colorAnalys).forEach(key => {\n      const RGB = colorAnalys[key].colorRGB;\n      RGB.push(colorAnalys[key].count);\n      colorAnalysArr.push(RGB)\n    });\n    console.timeEnd(1.2)\n\n    console.time(1.3)\n    colorAnalysArr.sort((a, b) => b[3] - a[3]);\n    this.mainColor = colorAnalysArr[0];\n    this.colorAnalysArr = colorAnalysArr;\n    console.timeEnd(1.3)\n  }\n\n  getPattern(number = 10) {\n    const colorAnalysArr = this.colorAnalysArr;\n    // Gets the color with the largest difference(r, g, b)\n    // and sort by that color\n    const analyRGB = [\n      { max: 0, min: Infinity, index: 0 },\n      { max: 0, min: Infinity, index: 1 },\n      { max: 0, min: Infinity, index: 2 }\n    ];\n    for (let i = 0; i < colorAnalysArr.length; i += 1) {\n      const colorRGB = colorAnalysArr[i];\n      for (let s = 0; s < 3; s++) {\n        analyRGB[s].min = Math.min(analyRGB[s].min, colorRGB[s]);\n        analyRGB[s].max = Math.max(analyRGB[s].max, colorRGB[s]);\n      }\n    }\n\n    analyRGB.sort((a, b) => (b.max - b.min) - (a.max - a.min));\n    const sortIndex = analyRGB[0].index;\n    colorAnalysArr.sort((a, b) => b[sortIndex] - a[sortIndex]);\n\n    // split color list \n    let colorSet = [];\n    const colorLength = Math.min(number, colorAnalysArr.length);\n    for (let i = 0; i < colorLength; i++) {\n      const start = Math.round((colorAnalysArr.length / colorLength) * (i));\n      const end = Math.round((colorAnalysArr.length / colorLength) * (i + 1)) - 1;\n      colorSet.push(colorAnalysArr.slice(start, end));\n    }\n    colorSet = colorSet.map(colors => {\n      return colors.sort((a, b) => b[3] - a[3])[0];\n    });\n    return colorSet.map(c => c.slice(0, 3));\n  }\n\n  getMainColor() {\n    return this.mainColor.slice(0, 3);\n  }\n}\n\nexport default HeyColor;"],"names":["[object Object]","image","config","this","definition","colorLength","getImageData","console","time","imgW","width","imgH","height","cavsW","cavsH","Math","min","canvas","document","createElement","ctx","getContext","timeEnd","drawImage","imageDate","analysisColor","data","colorAnalys","GDefinition","BDefinition","filterRVale","filterGVale","filterBVale","i","length","R","G","B","_R","parseInt","_G","_B","ColorID","colorRGB","colors","count","colorAnalysArr","Object","keys","forEach","key","RGB","push","sort","a","b","mainColor","number","analyRGB","max","Infinity","index","s","sortIndex","colorSet","start","round","end","slice","map","c"],"mappings":"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"}